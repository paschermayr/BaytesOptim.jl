var documenterSearchIndex = {"docs":
[{"location":"intro/#Introduction","page":"Introduction","title":"Introduction","text":"","category":"section"},{"location":"intro/","page":"Introduction","title":"Introduction","text":"Yet to be done.","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = BaytesOptim","category":"page"},{"location":"#BaytesOptim","page":"Home","title":"BaytesOptim","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for BaytesOptim.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [BaytesOptim]","category":"page"},{"location":"#BaytesOptim.LBFGTune","page":"Home","title":"BaytesOptim.LBFGTune","text":"struct LBFGTune{R<:Real} <: BaytesCore.AbstractTune\n\nStores information used throughout optimization algorithms.\n\nFields\n\nmagnitude_penalty::Real: Add -0.5 * magnitude_penalty * sum(abs2, q) to the log posterior when finding the local optimum. This can help avoid getting into high-density edge areas of the posterior which are otherwise not typical (eg multilevel models).\n\niterations::Int64: Maximum number of iterations in the optimization algorithm. Recall that we don't need to find the mode, or even a local mode, just be in a reasonable region.\n\n\n\n\n\n","category":"type"},{"location":"#BaytesOptim.OptimDefault","page":"Home","title":"BaytesOptim.OptimDefault","text":"struct OptimDefault{T<:NamedTuple, G, I<:AbstractInitialization, U<:UpdateBool}\n\nDefault arguments for Optim constructor.\n\nFields\n\nkernel::NamedTuple: Tuning Arguments for individual Optimizer\nGradientBackend::Any: Gradient backend used in MCMC step. Not used if Metropolis sampler is chosen.\ninit::AbstractInitialization: Method to obtain initial Modelparameter, see 'AbstractInitialization'.\ngenerated::UpdateBool: Boolean if generate(_rng, objective) for corresponding model is stored in MCMC Diagnostics.\n\n\n\n\n\n","category":"type"},{"location":"#BaytesOptim.OptimTune","page":"Home","title":"BaytesOptim.OptimTune","text":"struct OptimTune{T<:ModelWrappers.Tagged, K} <: BaytesCore.AbstractTune\n\nStores information used throughout optimization algorithms.\n\nFields\n\ntagged::ModelWrappers.Tagged: Tagged Parameter for Optimization routine\nkernel::Any: Tuning arguments for individual Optimizer\n\n\n\n\n\n","category":"type"},{"location":"#BaytesOptim.Optimizer","page":"Home","title":"BaytesOptim.Optimizer","text":"struct Optimizer{M<:OptimKernel, N<:OptimTune} <: BaytesCore.AbstractAlgorithm\n\nStores information for proposal step.\n\nFields\n\nkernel::OptimKernel: MCMC sampler\ntune::OptimTune: Tuning configuration for kernel.\n\n\n\n\n\n","category":"type"},{"location":"#BaytesCore.init-Tuple{Type{BaytesCore.AbstractConfiguration}, Type{OptimLBFG}, ModelWrappers.Objective}","page":"Home","title":"BaytesCore.init","text":"init(, optim, objective; magnitude_penalty, iterations)\n\n\nInitialize HMC custom configurations.\n\nExamples\n\n\n\n\n\n\n\n","category":"method"},{"location":"#BaytesCore.propagate-Tuple{Random.AbstractRNG, OptimLBFG, OptimTune, ModelWrappers.Objective}","page":"Home","title":"BaytesCore.propagate","text":"propagate(_rng, kernel, tune, objective)\n\n\nPropagate forward one MALA step.\n\nExamples\n\n\n\n\n\n\n\n","category":"method"},{"location":"#BaytesCore.propose!-Union{Tuple{T}, Tuple{D}, Tuple{Random.AbstractRNG, Optimizer, ModelWrappers.ModelWrapper, D}, Tuple{Random.AbstractRNG, Optimizer, ModelWrappers.ModelWrapper, D, T}} where {D, T<:BaytesCore.ProposalTune}","page":"Home","title":"BaytesCore.propose!","text":"propose!(_rng, optim, model, data)\npropose!(_rng, optim, model, data, proposaltune)\n\n\nInplace version of propose.\n\nExamples\n\n\n\n\n\n\n\n","category":"method"},{"location":"#BaytesCore.propose-Tuple{Random.AbstractRNG, Optimizer, ModelWrappers.Objective}","page":"Home","title":"BaytesCore.propose","text":"propose(_rng, optim, objective)\n\n\nPropose new parameter with optimizer. If update=true, objective function will be updated with input model and data.\n\nExamples\n\n\n\n\n\n\n\n","category":"method"}]
}
